/*
题目:给你 2 枚相同 的鸡蛋，和一栋从第 1 层到第 n 层共有 n 层楼的建筑。

已知存在楼层 f ，满足 0 <= f <= n ，任何从 高于 f 的楼层落下的鸡蛋都 会碎 ，从 f 楼层或比它低 的楼层落下的鸡蛋都 不会碎 。

每次操作，你可以取一枚 没有碎 的鸡蛋并把它从任一楼层 x 扔下（满足 1 <= x <= n）。如果鸡蛋碎了，你就不能再次使用它。如果某枚鸡蛋扔下后没有摔碎，则可以在之后的操作中 重复使用 这枚鸡蛋。

请你计算并返回要确定 f 确切的值 的 最小操作次数 是多少？
最后修订时间：2024/10/13
作者:WanHe
备注:LeetCode 1884
*/
class Solution {
public:
    int twoEggDrop(int n) {
        int x;
    
        // 确定切分量
        /*
        将楼层分组，第一枚鸡蛋从低到高在每组的最后一层扔下，
        当鸡蛋碎了，则说明f层在该分组内，之后使用第二枚鸡蛋遍历该分组，
        确认具体位置。则定位次数实质等于。为了保证定位次数一致，分组应该不均匀，*/
        int m = 0;
        int i = 1;
        for(; m + i < n;i++)
            m +=i;
        if( m - n == 0)
            return i-1;
        else
         return i;
    }
};